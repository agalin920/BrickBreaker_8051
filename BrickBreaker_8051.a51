POSITION EQU 30H ;; FLAG PARA SABER EN QUE POSICION SE ENCUENTRA EL CURSOR
RS EQU P0.2
	
DEB_COUNT EQU 50H
GRAL_STATE EQU 51H

VALUES_TABLE EQU 60H
ORG 0000H
JMP MAIN
ORG 0003H
SJMP INT_0 ;; INTERRUPCION 0
ORG 0013H

;; INTERRUPCIÓN 1 DE LOS DOS BOTONES
INT_1: 		CLR EA ;;DESHABILITAR INTERRUPCIONES
			MOV R5, #0 ;; DEBOUNCER
CMP_DEB1: 	ACALL WAIT2
			INC R5
			CJNE R5, #40, CMP_DEB1 ;; 20 mS
			JB P3.3, INT_1_EXIT ;; SI ES UN REBOTE, NO LE HACECASO
			JNB P2.5, INT_1_SEND
INT_1_SEND: MOV R0, #VALUES_TABLE
			MOV R3, POSITION ;; GUARDA EL NÚMERO LA POSICIÓN DEL CURSOR ;TODO CHECAR SI ES FF
			INC R3
			CJNE R3, #00H, INT_1_SEND_LOOP ;; SI ES FFH ES EL INICIO, NO DEBE MANDAR NADA
			;COMPARE_0: CJNE R3, #00, INT_1_SEND_LOOP ;; SI ES FFH ES EL INICIO, NO DEBE MANDAR NADA
			SJMP INT_1_EXIT
INT_1_SEND_LOOP:
			SETB TI
			MOV SBUF, @R0 ;; MANDAR VALOR
			CLR TI
			JNB TI, $ ;; SE ESPERA A QUE ESCRIBA EL DATO
			INC R0
			DJNZ R3, INT_1_SEND_LOOP
			SJMP INT_1_EXIT
INT_1_EXIT: SETB EA ;; VOLVER A HABILITAR INTERRUPCIONES
			RETI
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; INTERRUPCIÓN 0 DEL TECLADO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INT_0: 		CLR EA ;; NO SE PUEDE PRESIONAR NADA MÁS
			MOV R4, GRAL_STATE ;; EL ESTADO DEBE COMPARARSE
			CJNE R4, #0H, INT_0_STATE1
INT_0_STATE0:
			ACALL INC_CURSOR
			MOV A, P2 ;; GUARDAR VALOR PRESIONADO
			ANL A, #0FH ;; BORRAR ULTIMOS CUATRO BITS LEIDOS
			ADD A, #40H ;; IR AL INICIO DE LA TABLA DE CODIGO ASCII
			MOV R0, A ;; PARA PODER ACCEDER A LA TABLA
			SETB RS
			MOV P1, @R0 ;; ENVIAR AL LCD
			MOV A, POSITION ;; PARA APUNTAR AL DATO EN LA TABLA CORRECTO
			ADD A, #VALUES_TABLE ;; INICIO DE LA TABLA
			MOV R0, A ;; PREPARAR PARA APUNTAR
			MOV @R0, P1 ;; GUARDAR CÓDIGO ASCII
			ACALL LCD_ENABLE
			ACALL WAIT2
			ACALL INT_1_SEND;;;;;; AGREGADO PARA MANDAR EN CUANTO SE PRESIONE UN BOTÓN - FUNCIONANDO
			ACALL CLEAR   ;;;;;; AGREGADO -FUNCIONANDO
			ACALL JUMP ;;;;;;;AGREGADO - FUNCIONANDO
			MOV POSITION, #00H ;;;;;; AGREGADO - FUNCIONANDO
			SETB EA ;; HABILITAR DE NUEVO LAS INTERRUPCIONES
			ACALL LCD_ENABLE
			RETI
INC_CURSOR: MOV A, POSITION
			INC A
			CJNE A,#10H,INC_CURSOR_NEXT
			ACALL LCD_JUMP_ROW2
			MOV POSITION, A
			SJMP INC_CURSOR_FIN
INC_CURSOR_NEXT:
			CJNE A,#20H,INC_CURSOR_INCPOS
			ACALL LCD_CLEAR
			ACALL LCD_JUMP_ROW1
			MOV POSITION, #00H
			SJMP INC_CURSOR_FIN
INC_CURSOR_INCPOS:
			MOV POSITION,A
			JMP INC_CURSOR_FIN
INC_CURSOR_FIN:
			RET
INT_0_STATE1:
			MOV R4, GRAL_STATE ;; EL ESTADO DEBE COMPARARSE
			CJNE R4, #01, INT_0_STATE2
			MOV A, P2 ;; GUARDAR VALOR PRESIONADO
			ANL A, #0FH ;; BORRAR ULTIMOS CUATRO BITS LEIDOS (NO CONECTADOS)
			RL A ;; MANDAR A LA PARTE ALTA DEL ACUMULADOR
			RL A
			RL A
			RL A
			MOV GRAL_STATE, #02H;; SIUIENTE ESTADO ES EL ESTADO 2
			SETB EA ;; VOLVER A HABILITAR INTERRUPCIONES
			RETI
INT_0_STATE2:
			MOV R4, A
			MOV A, P2 ;; GUARDAR VALOR PRESIONADO
			ANL A, #0FH ;; BORRAR ULTIMOS CUATRO BITS LEIDOS (NO CONECTADOS)
			ADD A,R4
			MOV R4,A
			ACALL INC_CURSOR
			MOV P1,R4
			MOV A, POSITION ;; PARA APUNTAR AL DATO EN LA TABLA CORRECTO
			ADD A, #VALUES_TABLE ;; INICIO DE LA TABLA
			MOV R0, A ;; PREPARAR PARA APUNTAR
			MOV @R0, P1 ;; GUARDAR CÓDIGO ASCII
			ACALL WAIT2
			MOV GRAL_STATE, #00H;; REGRESA AL ESTADO CERO
			SETB EX1 ;; VOLVER A HABILITAR INTERRUPCIÓN DE OTROS BOTONES
			SETB EA ;; VOLVER A HABILITAR INTERRUPCIONES
			RETI
CLEAR: 	CLR RS ;; PARA BORRAR LA DDRAM
			MOV P1, #01H ;; SE BORRA TODA LA DDRAM
			ACALL WAIT2 ;; TIEMPO DE ESPERA DE ESCRITURA
			SETB RS
			RET

JUMP: ;; IR AL PRIMER RENGLÓN, PRIMERA POSICIÓN
			CLR RS ;; PARA BORRAR LA DDRAM
			MOV P1, #80H ;; SE BORRA TODA LA DDRAM
			ACALL LCD_ENABLE ;;ENVIAR EL PULSO
			ACALL WAIT2 ;; TIEMPO DE ESPERA DE ESCRITURA
			SETB RS
			RET
MAIN: 		SETB EA ;; HABILITAR INTERRUPCIONES
			SETB EX0 ;; HABILITAR ESCRITURA
			SETB EX1 ;; HABILITAR INTERRUPCION DE BOTONES
			SETB IT0 ;; INTERRUPCION POR FLANCO DE BAJADA
			SETB IT1 ;; INTERRUPCION POR FLANCO DE BAJADA
			; CLR LCD_ROW_BIT ;; EMPIEZA EN EL RENGLÓN 0
			MOV POSITION, #0FFH ;; LA INTERRUPCIÓN PRIMERO INCREMENTA Y DESPUES
			MOV GRAL_STATE, #0H ;; MAQUINA DE ESTADOS INICIA EN 0
			;; CONFIGURACIÓN DEL PUERTO SERIAL
			MOV TMOD, #00100001B
			MOV TCON, #00000101B
			;MOV TCON, #00000000B
			MOV SCON, #50H
			MOV TH1, #0FDH
			MOV TL1, #0FDH
			SETB TR1
			SJMP $
LCD_ENABLE:
			SETB P0.1
			ACALL WAIT2
			CLR P0.1
			RET


;ESPERA DE 144.17 mS
WAIT1: 		MOV R6, #0
			ACALL WAIT2
			DJNZ R7, WAIT1
			RET

;ESPERA DE .5653 mS
WAIT2: 		DJNZ R6, WAIT2
			RET
END